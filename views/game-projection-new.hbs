{{> header-game}}
<style>






/*.main 
.prompt{ color:#8c99ff }
.number{ color:#c6b700 }*/
	@font-face
{
	font-family:'GTWalsheim';
	src:url("/assets/fonts/GTWalsheim/GT-Walsheim-Bold.eot?#iefix") format("embedded-opentype"),url("/assets/fonts/GTWalsheim/GT-Walsheim-Bold.woff") format("woff"),url("/assets/fonts/GTWalsheim/GT-Walsheim-Bold.ttf") format("truetype")
	font-weight:bold;
	font-style:normal;
}

@font-face
{
	font-family:'GTWalsheim';
	src:url("/assets/fonts/GTWalsheim/GT-Walsheim-Bold-Oblique.eot?#iefix") format("embedded-opentype"),url("/assets/fonts/GTWalsheim/GT-Walsheim-Bold-Oblique.woff") format("woff"),url("/assets/fonts/GTWalsheim/GT-Walsheim-Bold-Oblique.ttf") format("truetype")
	font-weight:bold;
	font-style:italic;
}



	body
{
	font-family:'GTWalsheim',"Helvetica Neue",Helvetica,Roboto,Arial,sans-serif;
	color:white
}
	h1,h2,h3,h4,h5,h6
{
	font-family:'Basis-Grotesque',"Helvetica Neue",Helvetica,Roboto,Arial,sans-serif;
	font-weight:bold;
	line-height:1.2
}


.container {
    font-size: 40px;
    padding: 60px;
    padding-bottom: 0px;
}

.page {
    isolation: isolate;
    position: fixed;
    top: 1024px;
    left: 0;
    right: 0;
    z-index: 1000;
    height: 100%;
    opacity: 1;
    -webkit-transition: transform 1ms cubic-bezier(0.23, 1, 0.32, 1);
    -moz-transition: transform 1ms cubic-bezier(0.23, 1, 0.32, 1);
    -o-transition: transform 1ms cubic-bezier(0.23, 1, 0.32, 1);
    transition: transform: 1ms cubic-bezier(0.23, 1, 0.32, 1);
    -webkit-transform: translate3d(0, 0, 0);
    /* -webkit-backface-visibility: hidden; */
    background-color: white;
}


 body.warning {
      animation: colorchange 1s infinite;
      background-color:rgba(255,0,0,1);
      /* animation-name followed by duration in seconds*/
         /* you could also ue milliseconds (ms) or something like 2.5s */
      -webkit-animation: colorchange 1s infinite; /* Chrome and Safari */
    }

    @keyframes colorchange
    {
      0%   {background-color: rgba(240,90,40,.7);}
      25%  {background-color: rgba(240,90,40,0);}
      50%  {background-color: rgba(240,90,40,.7);}
      75%  {background-color: rgba(240,90,40,0);}
      100% {background-color: rgba(240,90,40,.7);}
    }

    @-webkit-keyframes colorchange /* Safari and Chrome - necessary duplicate */
    {
      0%   {background-color: rgba(240,90,40,.7);}
      25%  {background-color: rgba(240,90,40,0);}
      50%  {background-color: rgba(240,90,40,.7);}
      75%  {background-color: rgba(240,90,40,0);}
      100% {background-color: rgba(240,90,40,.7);}
    }




body,html{font-size: 50px;background:url(assets/images/projections/background.png);background-repeat:no-repeat;background-size:contain;background-position:center center;height: 100%; width: 100%;}

.page h1{display:none;color:white;font-size:12px;margin-left:20px; position:absolute;left:16px;top:16px;}
.page{background-color:transparent;overflow:hidden;}
.page .container {margin:0 auto;width:50%;color:black;text-align:center;  position: relative;
  top: 50%;
  transform: translateY(-50%);
  border:3px solid #f15a29;
  background:white;
  height: 680px;
    width: 680px;
  }
  .page .container  .inner-container {
 position: relative;
  top: 50%;
  transform: translateY(-50%);
}
.title-bar{    border-bottom: 3px solid #f15a29;
    text-transform: uppercase;
    color: #f15a29;
    text-align: center;
    height: 54px;
    left: 0px;
    background:white;
    /* width: 100%; */
    position: fixed;
    right: 0px;
    font-size: 33px;}

.footer-bar{
	border-top: 3px solid #f15a29;
	color: #f15a29;
	position:fixed;
  background:white;
	left:0px;
	bottom:0px;
	height:54px;
	font-size: 33px;
	width: 100%;
}

.ticker{
	/*animation: moveAcross 10s linear infinite;*/
	position:absolute;
	text-align: center;
	width:100vw;
}

@keyframes moveAcross {
	0%{
		left:0px;
	}
	50%{
		left:45vw;
	}
	100%{
		left:0px;
	}
}

.title-bar div{margin-top: 3px;}

.prep-time{color:pink;}
.task-time{color:red;}

.page.title {background-color:transparent;background-repeat:no-repeat;background-size:contain;background-position:center center;}


	.page .people ul {
    opacity: 1;
    -ms-filter: none;
    filter: none;
    list-style: none;
    padding-left: 0;
    margin-left: 0;
    margin-bottom: 2.5rem;
     margin-top: 2.5rem;
}
.page .people ul, .page .people ul.portrait {
    -webkit-box-pack: center;
    -moz-box-pack: center;
    -o-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -webkit-box-align: center;
    -moz-box-align: center;
    -o-box-align: center;
    -ms-flex-align: center;
    -webkit-align-items: center;
    align-items: center;
}
.page .people ol, .page .people ul, .page .people li {
    list-style: none;
}
.page .people li {
    opacity:0;

}

.page .people li img {
    display:block;
        width: 50%;
    margin: 0 auto;
}
.page .people ul {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: box;
    display: flex;
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
    -o-box-pack: justify;
    -ms-flex-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    opacity: 1;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
    -webkit-transition: opacity 0.5s;
    -moz-transition: opacity 0.5s;
    -o-transition: opacity 0.5s;
    -ms-transition: opacity 0.5s;
    transition: opacity 0.5s;
}

/*********
Custom Location CSS
*********/
body.littleafrica{color:#f4891e;}
body.littleafrica .title-bar {border-bottom: 3px solid  #f4891e; color: #f4891e;}
body.littleafrica .footer-bar {border-top: 3px solid  #f4891e; color: #f4891e;}
body.littleafrica .page .container { border: 3px solid  #f4891e; color:#8bc53f;}
body.littleafrica .page .container .prep-time-text { color:#f4891e;}
body.littleafrica .page .container .prep-time-text .prep-time {color: #ffaaaa;}
body.littleafrica .page .container .prep-time-text .task-time {color: #ffaaaa;}
body.littleafrica .page .container .currentTask{color:#8bc53f;}
body.littleafrica .page .container .title{color:#f4891e;}

body.westbank{color:#f05a28;}
body.westbank .title-bar {border-bottom: 3px solid  #f05a28; color: #f05a28;}
body.westbank .footer-bar {border-top: 3px solid  #f05a28; color: #f05a28;}
body.westbank .page .container { border: 3px solid  #f05a28; color:#8c99ff;}
body.westbank .page .container .prep-time-text { color:#f05a28;}
body.westbank .page .container .prep-time-text .prep-time {color: #c6b700;}
body.westbank .page .container .prep-time-text .task-time {color: #c6b700;}
body.westbank .page .container .currentTask{color:#8c99ff;}
body.westbank .page .container .title{color:#f05a28;}
  
body.commons{color:#8c99ff;}
body.commons .title-bar {border-bottom: 3px solid  #8c99ff; color: #8c99ff;}
body.commons .footer-bar {border-top: 3px solid  #8c99ff; color: #8c99ff;}
body.commons .page .container { border: 3px solid  #8c99ff; color:#8c99ff;}
body.commons .page .container .prep-time-text { color:#8c99ff;}
body.commons .page .container .prep-time-text .prep-time {color: #f4891e;}
body.commons .page .container .prep-time-text .task-time {color: #f4891e;}
body.commons .page .container .currentTask{color:#28b572;}
body.commons .page .container .title{color:#8c99ff;}

body.littlemekong{color:#0caaff;}
body.littlemekong .title-bar {border-bottom: 3px solid  #0caaff; color: #0caaff;}
body.littlemekong .footer-bar {border-top: 3px solid  #0caaff; color: #0caaff;}
body.littlemekong .page .container { border: 3px solid  #0caaff; color:#0caaff;}
body.littlemekong .page .container .prep-time-text { color:#0caaff;}
body.littlemekong .page .container .prep-time-text .prep-time {color: #ffaaaa;}
body.littlemekong .page .container .prep-time-text .task-time {color: #ffaaaa;}
body.littlemekong .page .container .currentTask{color:#c6b700;}
body.littlemekong .page .container .title{color:#0caaff;}

body.lowertown{color:#8bc53f;}
body.lowertown .title-bar {border-bottom: 3px solid  #8bc53f; color: #8bc53f;}
body.lowertown .footer-bar {border-top: 3px solid  #8bc53f; color: #8bc53f;}
body.lowertown .page .container { border: 3px solid  #8bc53f; color:#8bc53f;}
body.lowertown .page .container .prep-time-text { color:#8bc53f;}
body.lowertown .page .container .prep-time-text .prep-time {color: #f4891e;}
body.lowertown .page .container .prep-time-text .task-time {color: #f4891e;}
body.lowertown .page .container .currentTask{color:#0caaff;}
body.lowertown .page .container .title{color:#8bc53f;}


body.rondo{color:#28b572;}
body.rondo .title-bar {border-bottom: 3px solid  #28b572; color: #28b572;}
body.rondo .footer-bar {border-top: 3px solid  #28b572; color: #28b572;}
body.rondo .page .container { border: 3px solid  #28b572; color:#28b572;}
body.rondo .page .container .prep-time-text { color:#28b572;}
body.rondo .page .container .prep-time-text .prep-time {color: #f9bc00;}
body.rondo .page .container .prep-time-text .task-time {color: #f9bc00;}
body.rondo .page .container .currentTask{color:#8c99ff;}
body.rondo .page .container .title{color:#28b572;}

body.commons { color:#ef5928; }
body.westbank {}



body.rondo {}
body.littlemekong {} 
body.lowertown {}

.align-left{float:left;}
.align-right{float:right;}
.teamScoreBoard {font-size: 55px;padding-left: 80px;padding-right: 80px;line-height:1em;}
</style>

<div class="page title slideUp" style="">
     <!-- Top Nav Bar -->
     <div class="nav" style="display:none;">
        <a href="#title" id="title"></a>
     	<div class="close glyphicon glyphicon-menu-left" ></div>
     </div>
     <div class="container" style="border:0px;">
        <div class="inner-container">
	    	<img style="width:100%" src="assets/images/projections/title.png">
	    </div>
     </div>
	<h1>Title Screen</h1>
</div>

<div class="page highscores-players">
    <!-- Top Nav Bar -->
    <div class="nav" style="display:none;">
	    <a href="#highscores-players" id="highscores-players"></a>
    	<div class="close glyphicon glyphicon-menu-left"></div>
    </div>
    <div class="container" style="padding-top:0;">
    	<div class="inner-container">
	    	<h2 style="margin-top:0;">High Scores</h2>
				<div class="scoreBoard">calculating scores...</div>
	    </div>
     </div>
	<h1>Highscores</h1>
</div>

<div class="page highscores-teams">
     <!-- Top Nav Bar -->
     <div class="nav" style="display:none;">
        <a href="#highscores-teams" id="highscores-teams" ></a>
     	<div class="close glyphicon glyphicon-menu-left"></div>
     </div>
     <div class="container" style="padding-top:0;">
        <div class="inner-container">
	    	<h2 style="margin-top:0;text-transform:uppercase;font-size:20px;margin-bottom:40px;" class="title">Team Scores</h2>
				<div class="teamScoreBoard">calculating scores...</div>
	    </div>
     </div>
	<h1>Team Scores</h1>
</div>

<div class="title-bar">
  <div class="col-lg-4" style="font-size: 20px;margin-top: 13px;"><img class="location-icon" src="" style="    height: 24px;margin-right: 7px;top:-3px;"><span class="location-title">{{setLocation}}</span></div>
	<div class="col-lg-4">Collective Action!</div>
  <div class="col-lg-4" style="font-size: 20px;margin-top: 13px;">#collectiveaction</div>
</div>

<div class="footer-bar">
	<div class="ticker">
		Sign up to play: JoinCollectiveAction.com
		</div>

</div>

<div class="page invite-to-performance-area">
     <!-- Top Nav Bar -->
     <div class="nav" style="display:none;">
        <a href="#invite-to-performance-area" id="invite-to-performance-area"></a>
     	<div class="close glyphicon glyphicon-menu-left" ></div>
     </div>
     <div class="container" style="padding-top:0;">
        <div class="inner-container">
        	<p>Players: Come on up!</p>
        </div>
     </div>
	<h1>Teaser</h1>
</div>

<div class="page get-number-of-connections-task-players">
    <!-- Top Nav Bar -->
    <div class="nav" style="display:none;">
        <a href="#get-number-of-connections-task-players" id="get-number-of-connections-task-players"></a>
     	<div class="close glyphicon glyphicon-menu-left"></div>
    </div>
    <div class="container" style="width:80%">
        <div class="inner-container">
	        <div class="people">
	            <p>HEY!!!</p>
	        	<!-- <ul>
	        		<li>TEST 1<img src="assets/images/avatars/1.svg"></li>
	        		<li>TEST 2<img src="assets/images/avatars/2.svg"></li>
	        		<li>TEST 3<img src="assets/images/avatars/3.svg"></li>
	        		<li>TEST 4<img src="assets/images/avatars/4.svg"></li>
	        	</ul> -->
	       	</div>
	    </div>
     </div>
	<h1>get-number-of-connections-task-players</h1>
</div>

<div class="page setup-game">
     <!-- Top Nav Bar -->
     <div class="nav"  style="display:none;">
     	<a href="#get-task" id="get-task"></a>
     	<div class="close glyphicon glyphicon-menu-left"></div>
     </div>
     <div class="container" style="padding-top:0;">
        <div class="inner-container">
        	<p>Getting your task now...</p>
        </div>
     </div>
	<h1>Get Task Animation</h1>
</div>

<div class="page prep-for-task">
     <!-- Top Nav Bar -->
     <div class="nav"  style="display:none;">
     	<a href="#prep-for-task" id="prep-for-task"></a>
     	<div class="close glyphicon glyphicon-menu-left"></div>
     </div>
     <div class="container" style="padding-top:0;">
          <p class="prep-time-text" style="position: absolute;top: 25px;left: 0;width: 100%;"> Prepare for your action: <span class="prep-time ">30</span></p>
        <div class="inner-container">
        	<p class="currentTask"></p>
        	
       	</div>
     </div>
	<h1>Prep For Task</h1>
</div>

<div class="page start-task">
    <!-- Top Nav Bar -->
    <div class="nav" style="display:none;">
        <a href="#start-task" id="start-task" ></a>
     	<div class="close glyphicon glyphicon-menu-left"></div>
    </div>
     <div class="container" style="padding-top:0;">
     <p class="prep-time-text" style="position: absolute;top: 25px;left: 0;width: 100%;">   Act: <span class="task-time">60</span></p>
        <div class="inner-container">
          <p class="currentTask"></p>       
        </div>
       
     </div>
	<h1>Start Task</h1>
</div>

<div class="page end-task">
    <!-- Top Nav Bar -->

    <div class="nav" style="display:none;">
    	<a href="#end-task" id="end-task"></a>
    	<div class="close glyphicon glyphicon-menu-left " ></div>
    </div>
     <div class="container" style="padding-top:0;">
        <div class="inner-container">
        	<p>Great job, players! Points for everyone!</p>
        </div>
     </div>
	<h1>End Task</h1>
</div>


<div class="page end-score">
    <!-- Top Nav Bar -->

    <div class="nav" style="display:none;">
    	<a href="#end-score" id="end-score"></a>
    	<div class="close glyphicon glyphicon-menu-left " ></div>
    </div>
     <div class="container" style="padding-top:0;">
        <div class="inner-container">
        	<p>Each performer scored a point!</p>
        </div>
     </div>
	<h1>Score Task</h1>
</div>

<div class="page reset">
    <!-- Top Nav Bar -->

    <div class="nav" style="display:none;">
    	<a href="#reset" id="reset"></a>
    	<div class="close glyphicon glyphicon-menu-left " ></div>
    </div>
	<h1>End Task</h1>
</div>




<div class="page we-need-more-players">
     <!-- Top Nav Bar -->
     <div class="nav"  style="display:none;">
     	<a href="#we-need-more-players" id="we-need-more-players"></a>
     	<div class="close glyphicon glyphicon-menu-left"></div>
     </div>
     <div class="container">
        <p>We Need More players!!!!!</p>
     </div>
	<h1>We need more players</h1>
</div>

<audio id="sound-ding" src="assets/audio/ding.mp3"> </audio>
<audio id="sound-jingle" src="assets/audio/jingle.mp3"> </audio>
<audio id="sound-fanfare" src="assets/audio/fanfare.mp3"> </audio>
<audio id="sound-cheers" src="assets/audio/cheers.mp3"> </audio>

<div class="tempAvatarStorage">
	<!-- Delete me and move to a real place :) -->

</div>
<!--
<script type="text/javascript">
var avatars = []
// var count = 0
// var cell = 200
// var numAvatars = 30
// var positions = []
var sound;
var soundReverse;
function preload(){
}

function setup() {
  sound = loadSound('pop.mp3');
  soundReverse = loadSound('popReverse.mp3');

  createCanvas(windowWidth,windowHeight)
  // for (var i = 0; i < 30; i++) {
    // var a = loadImage('avatars/'+ Math.ceil(Math.random()*294)+'.png')

  // }


}

function draw() {
  background(255)


  avatars.sort(function(a, b) {
    return (a.y-a.avatarHeight) - (b.y-a.avatarHeight)
  })

  for (var i = 0; i < avatars.length; i++) {
    avatars[i].display();
    if(avatars[i].readyRemove == true){avatars.splice(i, 1); }
  }







  // noLoop();

  // if(count >= numAvatars) return;

  // for (var x = cell/5; x < width-cell; x+= cell ) {
  //   for (var y = cell/5; y < height - cell; y+= cell) {
  //
  //     if(Math.random() > 0.5){
  //       count++
  //       console.log(count);
  //       image(avatars[count], x,y,cell*0.75,cell*0.75)
  //     }
  //
  //
  //   }
  // }


  // for (var i = 0; i < numAvatars; i++) {
  //   pos = {}
  //
  //   pos.x = random(0,width - numAvatars*6)
  //   pos.y = random(0, height - numAvatars*6)
  //
  //   positions.push(pos)
  // }
  //
  // positions.sort(function(a, b) {
  //   return a.y - b.y
  // })
  //
  // for (var i = 0; i < numAvatars ; i++) {
  //   image(avatars[i],positions[i].x,positions[i].y, numAvatars*6,numAvatars*6)
  // }


}

function perlin() {
  let i = 0;
  let n = random(100);
  return ()=>{
    n += 0.0004;

    //i = (i + 1) % 2;

    let noiseT = i + n;
    //noiseT = noiseT % 1.0;
    var ret = noise(noiseT); //(0,1)
    //ret = (ret - .5) * 2; //(-1,1)
    //console.log(ret)
    return ret;
  }
}
function easeOutBounce(t, b, c, d) {
    if ((t /= d) < (1 / 2.75)) {
        return c * (7.5625 * t * t) + b;
    } else if (t < (2 / 2.75)) {
        return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;
    } else if (t < (2.5 / 2.75)) {
        return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;
    } else {
        return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;
    }
}

function easeInOutElastic(t, b, c, d) {
    var a, p, s;
    s = 1.70158;
    p = 0;
    a = c;
    if (t === 0) {
      b;
    } else if ((t /= d / 2) === 2) {
      b + c;
    }
    if (!p) {
      p = d * (0.3 * 1.5);
    }
    if (a < Math.abs(c)) {
      a = c;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(c / a);
    }
    if (t < 1) {
      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
    } else {
      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;
    }
  }


  function easeInElastic(t, b, c, d) {
    var a, p, s;
    s = 1.70158;
    p = 0;
    a = c;
    if (t === 0) {
      b;
    } else if ((t /= d) === 1) {
      b + c;
    }
    if (!p) {
      p = d * 0.3;
    }
    if (a < Math.abs(c)) {
      a = c;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(c / a);
    }
    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
  }
var startTime
var duration = 300; // animate over 1000ms
var duration2 = 700; // animate over 1000ms

var totChange = .99; // change the size by 25%


function avatar(path,x,y){
  this.id = 'aaa';
  this.x = x
  this.y = y
  this.previousX = 0;
  this.previousY = 0;
  this.random = perlin()
  this.yRandom = perlin()
  this.image = loadImage(path)
  this.speed = random(0,6)
  this.waitTime = random(4,10)
  this.counter = 0;
  this.state = 'avatarIsGrowing';
  this.avatarWidth = -2;
  this.avatarHeight = 0;
  this.startTime = performance.now();
  this.endTime = this.startTime + duration;
  this.rotate = 0;
  this.angle = 0;
  this.angleCounter = 0;
  this.currentValue = 0;
  this.readyRemove = false;

  sound.playbackRate = random(.8,1.5);
  sound.play();

  this.avatarGrow = function(){
    if (this.time >= this.endTime)
    {
      this.state = 'normal';
    }

    var elapsed =  this.time - this.startTime;
    var value = easeOutBounce(elapsed, .001, totChange, duration);
    this.currentValue =value; // this is needed to reverse the tween.

    this.avatarWidth = (this.image.width) * value/2;
    this.avatarHeight = (this.image.height) * value/2;//
  },
  this.avatarShrink = function(){
    if (this.time >= this.endTime)
    {
      this.state = 'normal';
      this.readyRemove = true;
    }

    var elapsed =  this.time - this.startTime;
    var value = easeInOutElastic(elapsed, this.currentValue, -this.currentValue, duration2);

    if(value < 0){ value = 0.000001; } // This is required from keep the tween from reversing too far

    this.avatarWidth = (this.image.width) * (value/2);
    this.avatarHeight = (this.image.height) * (value/2);//
  },
  this.calculateSpeed = function(){
      this.speed = abs(this.x - this.previousX) + abs(this.y - this.previousY);
      //speed = speed;
      //console.log(speed);
      this.previousX = this.x;
      this.previousY = this.y;
  },
  this.display = function(){

    this.time = performance.now();

    this.x = map(this.random(),0,1, -.5,1.5) * width;//constrain(this.x + this.random()*4, 0, width - (this.image.width/2));
    this.y = map(this.yRandom(), 0, 1, -.5, 1.5) * height;//constrain(this.y + this.random()*4, 0, height - (this.image.height/2));

    if(this.image.width != 1){ // this necessary until the image is loaded

      switch(this.state) {
        case 'avatarIsGrowing':
          this.avatarGrow();
          break;
        case 'avatarIsShrinking':
          this.avatarShrink();
          break;
      }

      this.calculateSpeed();

      var angle = sin(this.angleCounter * 2 * PI); //-1, 1
      angle =  round(angle * 1) / 1; // snap
      angle *= .75;

      var bounceOffset = sin((this.angleCounter + .25) * 2 * 2 * PI);
      //bounceOffset =  round(bounceOffset * 1) / 1; // snap
      bounceOffset *= 1.75;

      push();
      translate(this.x,this.y + bounceOffset);
      rotate(radians(angle));
      image(this.image,0-(this.avatarWidth/2),0-(this.avatarHeight),this.avatarWidth,this.avatarHeight);
      pop();


      var dT = (1/30.0); //delta time
      //console.log(speed);
      var animSpeed = map(this.speed, 0, 1, .6, .75);
      this.angleCounter = (this.angleCounter + dT * animSpeed);



    }
  }
}

function lerp(t, minn, maxx)
{
  return(t, 0, 1, minn, maxx);
}

function mousePressed() {
  var a = new avatar('avatars/'+ Math.ceil(Math.random()*294)+'.png', random(0,width),random(0,height) )
    avatars.push(a)
}

function keyPressed() {
  if (keyCode === LEFT_ARROW) {
     for (var i = 0; i < avatars.length; i++) {

        if(avatars[i].id == 'aaa'){
          avatars[i].state = 'avatarIsShrinking';
          avatars[i].startTime = performance.now();
          avatars[i].endTime = avatars[i].startTime + duration2;
          soundReverse.playbackRate = random(.8,1.5);
          soundReverse.play();
      }
        }
  }
}

</script> -->

{{> footer}}
